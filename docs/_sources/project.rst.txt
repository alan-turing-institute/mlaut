Description of the project
==========================


The goal of ``mlaut`` is to automate the workflow for training and comparing machine learning estimators. The package facilitates the training of a large number of estimators on multiple datasets. It also provides a statistical framework for comparing the performance of the trained estimators.


Overview
--------

``mlaut`` seeks to expand the functionality of the `scikit-learn <http://scikit-learn.org>`_ package. It also aims at providing a seamless integration with other packages such as `scipy <https://www.scipy.org/>`_, `statsmodels <https://www.statsmodels.org>`_, `scikit-posthocs <https://github.com/maximtrp/scikit-posthocs>`_, `Tensorflow <https://www.tensorflow.org/>`_ and `Orange <https://orange.biolab.si/>`_.

.. note:: Knowledge of all above mentioned packages is not necessarily required in order to work with ``mlaut``. However, in order to make full use of it and be able to expand its functionality understanding of `scikit-learn <http://scikit-learn.org>`_ is highly desirable. 

``mlaut`` is comprised of the following main modules.

* :ref:`estimators`. This module encompasses all machine learning models that come with MLAUT as well as methods for instantiating them based on criteria provided by the user. 

* :ref:`Experiments`. This module contains the logic for orchestration of the machine learning experiments. It also includes the logic for performing the statistical tests for comparing the performance of the trained algorithms. The predictions of the trained estimators on the test sets for each dataset serve as input for the statistical tests.


Applications and use
---------------------

``mlaut`` can be used for running supervised classification and regression experiments. The package currently provides an interface to scikit-learn and keras models  but can easily be extended by the user to incorporate additional toolboxes.
	
``mlaut`` is suitable for creating a begin-to-end pipeline for processing data, training machine learning experiments, making predictions and applying statistical tests to benchmark the performance of the different models. 
	
Specifically, MLAUT can be used to:

* Automate the entire workflow for large-scale machine learning experiments studies. This includes structuring and transforming the data, selecting the appropriate estimators for the task and data data at hand, tuning the estimators and finally comparing the results.

* Fit data and make predictions by using the prediction strategies as described in \ref{subsection:estimators} or by implementing new prediction strategies.

* Evaluate the results of the prediction strategies in a uniform and statistically sound manner.



Workflow
--------
The graph below shows on a high level the workflow that ``mlaut`` facilitates.

.. figure:: images/workflow.png
   :scale: 50 %
   :alt: interaction between classes

The user should begin by saving the preprocessed datasets on its hard drive. The ``Data`` module is then evoked for saving the datasets in a HDF5 database. The second step of the process is to instantiate the machine learning estimator objects. The user has the choice of either using the pre-defined estimators in the ``Estimators`` module or defining its own by making use of the :ref:`mlaut_estimator-label`. Once this step is completed the user can proceed to running the experiments by making use of the ``Orchestrator`` module. Once all estimators are trained on all datasets the user can carry out the final step of analyzing the results by evoking the ``Experiments`` module. 


